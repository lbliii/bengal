name: Tests

on:
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly tests every Sunday at 2 AM UTC (9 PM Saturday PST)
    - cron: '0 2 * * 0'
  workflow_dispatch:  # Allow manual trigger any time

concurrency:
  group: tests-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Fast check: quick signal (unit + most integration)
  fast-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.14
      uses: actions/setup-python@v5
      with:
        python-version: "3.14"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Fast test suite (exclude performance/stateful/slow)
      env:
        CI: true
        BENGAL_CI_FAST: "1"
        OMP_NUM_THREADS: "1"
      run: |
        echo "Running fast test suite (excluding performance/stateful/slow)..."
        pytest -n auto -v --tb=short --dist worksteal --max-worker-restart=3 -m "not performance and not stateful and not slow"

  # Baseurl spot-checks + Coverage (single-process)
  full-suite:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: fast-check  # Only run if fast-check passes
    strategy:
      matrix:
        python-version: ["3.14"]
        baseurl: ["", "/bengal", "https://example.com/sub"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Run targeted baseurl portability tests
      env:
        BENGAL_BASEURL: ${{ matrix.baseurl }}
        CI: true
        BENGAL_CI_FAST: "1"
        OMP_NUM_THREADS: "1"
      run: |
        echo "Running with BENGAL_BASEURL='${BENGAL_BASEURL}'"
        pytest -q -n auto tests/unit/config/test_config_loader_baseurl_env.py tests/unit/rendering/test_asset_url_baseurl.py tests/unit/rendering/test_template_links_baseurl.py tests/integration/test_baseurl_builds.py

    - name: Coverage (single-process, exclude performance/stateful/slow)
      if: matrix.baseurl == ''
      env:
        CI: true
        BENGAL_CI_FAST: "1"
      run: |
        python -m pytest -n 0 -v --tb=short --cov=bengal --cov-report=xml -m "not performance and not stateful and not slow"

  # Slow tests (memory profiling, bytecode cache, etc.)
  slow-tests:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.14
      uses: actions/setup-python@v5
      with:
        python-version: "3.14"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    - name: Run slow tests
      env:
        CI: true
        OMP_NUM_THREADS: "1"
      run: |
        pytest -n auto -v --tb=short -m "slow and not stateful and not performance" --dist worksteal --max-worker-restart=3

  # Stateful workflows (weekly/manual)
  stateful:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.14
      uses: actions/setup-python@v5
      with:
        python-version: "3.14"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev] pytest-forked
    - name: Run stateful tests (xdist hardened)
      env:
        CI: true
        OMP_NUM_THREADS: "1"
      run: |
        pytest -n auto -v --tb=short -m stateful --dist worksteal --max-worker-restart=2 -o timeout_method=signal -p pytest_forked --forked

  # Performance suite (weekly/manual)
  performance:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.14
      uses: actions/setup-python@v5
      with:
        python-version: "3.14"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    - name: Run performance tests
      env:
        CI: true
        OMP_NUM_THREADS: "1"
      run: |
        pytest -n auto -v --tb=short -m performance --dist worksteal --max-worker-restart=2 -o timeout_method=signal

    - name: Upload coverage
      if: matrix.baseurl == ''
      uses: codecov/codecov-action@v4
