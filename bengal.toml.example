# Bengal SSG Configuration Example
#
# ðŸ†• NEW: Config Directory Structure (RECOMMENDED)
# ================================================
# For new projects, we recommend using the config/ directory structure:
#
#   config/
#   â”œâ”€â”€ _default/           # Base configuration
#   â”‚   â”œâ”€â”€ site.yaml       # Site metadata, menus
#   â”‚   â”œâ”€â”€ build.yaml      # Build settings
#   â”‚   â””â”€â”€ features.yaml   # Feature toggles
#   â”œâ”€â”€ environments/       # Environment-specific (local, preview, production)
#   â””â”€â”€ profiles/          # Build profiles (writer, theme-dev, dev)
#
# Benefits:
#   âœ… Environment-aware (auto-detects Netlify, Vercel, GitHub Actions)
#   âœ… Profile-based workflows (optimize for your use case)
#   âœ… Better organization (split concerns across files)
#   âœ… Introspection tools (bengal config show/diff/doctor)
#
# See: config.example/ directory for full annotated examples
# See: examples/blog/ for a working example
#
# This single-file format still works and is maintained for simplicity!
#
# ================================================
#
# Bengal uses sensible defaults - you only need to configure what you want to change!
#
# Default settings (no config needed):
# âœ… parallel = true         - Parallel builds for speed
# âœ… incremental = true       - Smart rebuilds (18-42x faster!)
# âœ… minify_html = true       - Smaller pages (15-25% reduction)
# âœ… minify_assets = true     - Optimized CSS/JS
# âœ… fingerprint_assets = true - Cache busting
# âœ… generate_sitemap = true  - SEO ready
# âœ… generate_rss = true      - RSS feed included
# âœ… JSON + LLM output = true - AI-native by default!
# âœ… validate_links = true    - Catch broken links
# âœ… validate_build = true    - Quality checks

[site]
title = "My Site"
baseurl = "https://example.com"
# Note: Theme name is now configured in [theme] section below

# Optional site branding (used in templates if provided)
# logo_image = "/assets/logo.png"   # Absolute or baseurl-relative URL
# logo_text = "My Brand"            # Text logo fallback
# favicon = "/assets/favicon.png"   # Custom favicon path

[build]
output_dir = "public"

# Fast mode (recommended) - Maximum speed for builds
# Enables quiet output, ensures parallel rendering is on
# Note: To suppress GIL warnings in free-threaded Python, set PYTHON_GIL=0 in your shell
fast_mode = true

# Uncomment to disable default features if needed:
# incremental = false        # Force full rebuilds every time
# minify_html = false        # Keep HTML unminified (for debugging)
# generate_sitemap = false   # Skip sitemap generation
# generate_rss = false       # Skip RSS feed

# Template caching (10-15% faster builds)
# Caches compiled Jinja2 templates to .bengal-cache/templates/
cache_templates = true

# URL style
# pretty_urls = true           # true: /about/; false: /about.html
# HTML Output Formatting (advanced)
# Controls whitespace and comment handling; overrides minify_html when set
# [html_output]
# mode = "minify"           # Options: "minify", "pretty", "raw"
# remove_comments = true     # Strip HTML comments (excludes IE conditionals)
# collapse_blank_lines = true


# Auto-regenerate autodoc before builds
# Automatically regenerates Python/CLI docs if source files are newer than generated docs
# Only regenerates when needed (smart timestamp checking)
auto_regenerate_autodoc = false  # Set to true for convenience during development

# Output formats (defaults: JSON + LLM text for all pages)
# Uncomment to customize:
# [build.output_formats]
# enabled = false           # Disable all custom formats
# json = false              # Disable per-page JSON
# llm_txt = false           # Disable per-page LLM text
# site_json = false         # Disable site-wide index.json
# site_llm = false          # Disable site-wide llm-full.txt

# Advanced Output Formats configuration (more control)
[output_formats]
enabled = true
per_page = ["json", "llm_txt"]
site_wide = ["index_json", "llm_full"]

[output_formats.options]
include_html_content = true
include_plain_text = true
excerpt_length = 200
exclude_sections = []
exclude_patterns = ["404.html", "search.html"]
# 0 or null = compact, 2 = pretty
json_indent = 0
llm_separator_width = 80
# Include full content in index.json (off by default)
include_full_content_in_index = false

# Search Page (special page)
# Generated at /search/ by default if template exists
# Uncomment to customize or disable:
# [search]
# enabled = true
# path = "/search/"
# template = "search.html"

# Search index preload strategy for the browser (used by theme JS)
# Options: "immediate" | "smart" | (unset to disable explicit preload)
search_preload = "smart"

# Font Configuration - Automatically downloads and self-hosts Google Fonts
# Simple string format: "FontFamily:weight1,weight2,weight3"
[fonts]
primary = "Inter:400,600,700"        # Body text
heading = "Playfair Display:700"     # Headings
code = "JetBrains Mono:400"          # Code blocks

# Or use detailed dict format for more control:
# [fonts.custom]
# family = "Roboto"
# weights = [300, 400, 700]
# styles = ["normal", "italic"]  # Optional, defaults to ["normal"]

# Generated CSS uses custom properties:
#   --font-primary: 'Inter'
#   --font-heading: 'Playfair Display'
#   --font-code: 'JetBrains Mono'

# Theme Configuration
[theme]
name = "default"  # Which theme to use (default, or name of custom theme in themes/ directory)

# Default appearance mode for new visitors (overridden by localStorage once user makes a choice)
default_appearance = "system"  # Options: "light", "dark", "system" (follows OS preference)

# Default color palette (leave empty for default theme palette)
default_palette = ""  # Options: "" (default), "snow-lynx", or custom palette name
# Example: default_palette = "snow-lynx"  # Warm teal + cream palette for light mode, ice-blue for dark

# Internationalization (optional)
[i18n]
strategy = "none"           # "none" | "prefix" | "domain"
default_language = "en"
default_in_subdir = false   # When strategy = "prefix"

# Pagination (optional)
[pagination]
per_page = 10

# Custom Parameters (optional)
# ============================
# User-defined variables accessible in templates and markdown
# Access via: {{ site.params.product_name }} or {{ site.config.params.product_name }}
[params]
# product_name = "Bengal"
# product_version = "1.0.0"
# api_url = "https://api.example.com"
# support_email = "support@example.com"

# Content Configuration (optional)
# =================================
# Controls how content is organized, displayed, and rendered
[content]
# Default content type for all pages/sections (can be overridden via frontmatter)
# Options: doc, blog, tutorial, page, api-reference, cli-reference, changelog, archive, list
# If unset, Bengal will auto-detect based on directory structure or fall back to "list"
# default_type = "doc"     # Great for documentation sites
# default_type = "blog"    # Great for blog sites
# default_type = "page"    # Great for general websites

# Excerpt & summaries
# excerpt_length = 200      # Characters for auto-generated excerpts
# summary_length = 160      # Characters for meta descriptions (SEO)

# Reading time
# reading_speed = 200       # Words per minute
# show_reading_time = true

# Related content
# related_count = 3         # Number of related posts to show
# related_threshold = 0.3   # Minimum tag similarity (0.0-1.0)

# Date formatting
# date_format = "long"      # Options: "short", "medium", "long", "iso"

# Table of contents
# toc_depth = 3             # Maximum heading depth (1-6)
# toc_min_headings = 2      # Minimum headings to show TOC

# Child pages display
# show_children_default = true
# show_subsections_default = true
# show_excerpts_default = true

# Content organization
# sort_pages_by = "weight"  # Options: "weight", "date", "title", "modified"
# sort_order = "asc"        # Options: "asc", "desc"

# Markdown (optional)
[markdown]
parser = "mistune"          # "mistune" (default)

# Autodoc Configuration
[autodoc.python]
enabled = true
source_dirs = ["bengal"]  # Directories to document
output_dir = "content/api"  # Where to put generated docs
docstring_style = "auto"  # auto, google, numpy, or sphinx

# Files/patterns to exclude
exclude = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

# Member visibility
include_private = false  # Include _private methods
include_special = false  # Include __special__ methods

# Alias and inherited member features (optional, OFF by default)
# Aliases are always detected; inherited members require opt-in
# include_inherited = true  # Show inherited methods from base classes
# alias_strategy = "canonical"  # How to render aliases: canonical, duplicate, list-only

# Per-type control (more granular than global include_inherited)
# [autodoc.python.include_inherited_by_type]
# class = true      # Show inherited methods on classes
# exception = false # Don't show for exceptions

# Future: OpenAPI autodoc
[autodoc.openapi]
enabled = false
# spec_file = "openapi.yaml"
# output_dir = "content/api-docs"

# CLI autodoc
[autodoc.cli]
enabled = true
app_module = "bengal.cli:main"  # module_path:attribute format
output_dir = "content/cli"
framework = "click"  # click, argparse, or typer
include_hidden = false  # Include hidden commands

# Client bootstrap JSON (optional)
# Includes a minimal JSON snapshot in the page head for client scripts
expose_metadata_json = false

# Assets pipeline (optional; requires Node CLIs if enabled)
[assets]
pipeline = false
scss = true
postcss = true
# postcss_config = "postcss.config.cjs"
bundle_js = true
esbuild_target = "es2018"
sourcemaps = true

# Health check configuration
[health.linkcheck]
# Async HTTP checker settings
max_concurrency = 20      # Maximum concurrent HTTP requests
per_host_limit = 4        # Maximum concurrent requests per host (avoid rate limits)
timeout = 10.0            # Request timeout in seconds
retries = 2               # Number of retry attempts for failed requests
retry_backoff = 0.5       # Base backoff time for exponential backoff (seconds)

# What to check
external = true           # Check external links (http/https)
internal = true           # Check internal links (page-to-page, anchors)

# Ignore policies
exclude = [               # URL patterns to ignore (regex)
    "^/api/preview/",     # Example: Exclude preview endpoints
]
exclude_domain = [        # Domains to ignore
    "localhost",
    "127.0.0.1",
]
ignore_status = [         # HTTP status codes/ranges to ignore
    "500-599",            # Ignore all 5xx errors (server errors)
    "403",                # Ignore forbidden responses
]

# Cache settings (future enhancement)
# cache_ttl_hours = 24  # Cache link check results for 24 hours

# Health check thresholds (connectivity analysis)
[health_check]
orphan_threshold = 5
super_hub_threshold = 50

# Development configuration
[dev]

# Traceback configuration (configurable error display)
[dev.traceback]
# style: full | compact | minimal | off
style = "compact"
# Show local variables in tracebacks (only meaningful for 'full')
show_locals = false
# Maximum stack frames to display
max_frames = 10
# Libraries to suppress in tracebacks (hide internal frames)
suppress = ["click", "jinja2"]
